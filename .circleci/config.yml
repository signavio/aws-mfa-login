version: 2.1

jobs:
  build:
    docker:
      - image: circleci/golang:1.12
        environment:
          - GO111MODULE: "on"
    working_directory: /go/src/github.com/signavio/aws-mfa-login
    steps:
      - run: git config --global url.ssh://git@github.com/signavio.insteadOf https://github.com/signavio
      - checkout
      - run:
          name: install-tools
          command: |
            go get -u github.com/mitchellh/gox
            go get -u github.com/stevenmatthewt/semantics
      - run:
          name: test
          command: |
            go test ./action -v -race -coverprofile=coverage.txt -covermode=atomic
      - run:
          name: upload code coverage
          command: |
            bash <(curl -s https://codecov.io/bash)
      - run:
          name: cross compile
          command: |
            go get .
            tag=$(semantics --output-tag --dry-run | sed -e "s/^v//")
            if [ "$tag" ]; then
              echo "found release version $tag"
              gox -ldflags "-X github.com/signavio/aws-mfa-login/cmd.Version=$tag" -os="linux darwin windows" -arch="amd64" -output="dist/aws-mfa-login_{{.OS}}_{{.Arch}}"
            else
              echo "no new release detected using git SHA1 ${CIRCLE_BRANCH}-${CIRCLE_SHA1} as version"
              gox -ldflags "-X github.com/signavio/aws-mfa-login/cmd.Version=${CIRCLE_BRANCH}-${CIRCLE_SHA1}" -os="linux darwin windows" -arch="amd64" -output="dist/aws-mfa-login_{{.OS}}_{{.Arch}}"
            fi
            ./dist/aws-mfa-login_linux_amd64 --version
            cd dist/ && gzip *
      - persist_to_workspace:
          root: .
          paths:
            - dist/*

  publish:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/signavio/aws-mfa-login
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: install-tools
          command: |
            go get -u github.com/tcnksm/ghr
            go get -u github.com/stevenmatthewt/semantics
      - add_ssh_keys:
          fingerprints:
            - "f8:92:a9:8a:62:4f:4a:f2:3a:52:aa:b9:7e:05:72:b6"
      - run:
          name: create release
          command: |
            tag=$(semantics --output-tag)
            if [ "$tag" ]; then
              ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace $tag dist/
            else
              echo "The commit message(s) did not indicate a major/minor/patch version."
            fi

workflows:
  build-publish:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              only: master
